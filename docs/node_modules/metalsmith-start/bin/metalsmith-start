#!/usr/bin/env node
require('gnode')

if (typeof process.env.METALSMITH === 'undefined') {
  process.env.NODE_ENV = process.env.NODE_ENV || 'development'
}

var dir = process.cwd()
var Runner = require('../lib/runner')
// var program = require('commander')
var fs = require('fs')
var join = require('path').join
var meow = require('meow')

var program = meow([
  'Usage:',
  '     metalsmith-start [options]',
  '',
  'Options:',
  '    -p, --port <port>     specify the port',
  '    -R, --no-livereload   disable livereload',
  '        --config          show sample config file',
  '',
  'Other options:',
  '    -h, --help            print usage information',
  '    -v, --version         show version info and exit'
].join('\n'), {
  string: 'port',
  boolean: 'livereload',
  default: {
    livereload: true
  },
  alias: {
    p: 'port',
    h: 'help',
    v: 'version'
  }
}).flags

if (program.r) {
  program.livereload = false
  delete program.r
}

try {
  if (program.config) {
    if (process.stdout.isTTY) {
      var chalk = require('chalk')
      process.stderr.write(
        chalk.green('// Instructions: save this file as metalsmith.js.\n') +
        chalk.green('// You can do this via \'metalstart --config > metalsmith.js\'.') +
        '\n\n')
    }
    var path = join(__dirname, '../data/metalsmith.js')
    var data = fs.readFileSync(path, 'utf-8')
    process.stdout.write(data)
    process.exit(0)
  }
  var r = new Runner(dir, program)
  r.start(function (err) {
    if (err) r.reporter.showErr(err)
  })
} catch (err) {
  console.error(err.message)
}
